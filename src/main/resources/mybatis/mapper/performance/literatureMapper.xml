<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alvinsite.demo.dao.performance.LiteratureDao">
    <resultMap id="findLiteratureResult" type="Literature" >
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="title" column="title"/>
        <result property="type" column="type"/>
        <result property="wordCount" column="wordCount"/>
        <result property="firstAuthor" column="firstAuthor"/>
        <result property="score" column="score"/>

        <association property="department" javaType="Department" >
            <id property="id" column="departmentId" />
            <result property="title" column="department" />
        </association>
        <collection property="authors" ofType="top.alvinsite.demo.model.dto.auth.ManagerUserDTO" column="zzbh"  select="findAuthorsById">
            <id property="account" column="account"/>
            <result property="nickname" column="nickname"/>
        </collection>
    </resultMap>

    <select id="findLiterature" parameterType="top.alvinsite.demo.model.params.PerformanceQuery" resultMap="findLiteratureResult">
        select
            gxky0308.id as id,
            gxjg0101.gh as account,
            gxjg0101.xm as nickname,
            department.id as departmentId,
            department.title as department,
            gxky0301.zzmc as title,
            gxky0301.zzlx as type,
            gxky0301.zs as wordCount,
            gxky0308.zzbh,
            gxky0301.dyzzmc as firstAuthor,
            gxky0301.cbsjb as publisherLevel,
            gxky0301.zzlz as fundingSource,
            gxky0301.sfwxgb as isRevised,
            year(gxky0301.cbrq) as ApprovalProjectYear,
            gxky0301.rs as memberNum,
            gxky0308.smsx as SignedOrder

        from gxky0308
        join gxky0301 on gxky0301.id = gxky0308.zzbh
        join gxjg0101 on gxjg0101.gh = gxky0308.zzzgh
        join department on department.id = gxjg0101.dwh
        <where>
            gxky0301.shzt = 2
            <if test="nickname != null">and gxjg0101.xm like concat('%', #{nickname}, '%')</if>
            <if test="account != null">and gxjg0101.gh like concat('%', #{account}, '%')</if>
            <if test="department != null">and department.title like concat('%', #{department}, '%')</if>
            <if test="departmentId != null">and gxjg0101.dwh = #{departmentId}</if>
            <if test="year != null">and year(gxky0301.cbrq) = #{year}</if>
            <if test="departmentScope != null">
                and gxjg0101.dwh in
                <foreach collection="departmentScope" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findAuthorsById"  parameterType="java.lang.String" resultType="ManagerUserDTO">
        SELECT
            gxjg0101.xm as nickname,
            gxjg0101.gh as account
        FROM gxky0308
        join gxjg0101 on gxjg0101.gh = gxky0308.zzzgh
        where gxky0308.zzbh = #{id}
        order by gxky0308.smsx
    </select>

</mapper>